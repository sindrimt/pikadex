import type { Predicate, Variable } from "../../CypherBuilder";
import type { CypherEnvironment } from "../../Environment";
import type { NodeRef } from "../../variables/NodeRef";
import { Clause } from "../../clauses/Clause";
import { WithReturn } from "../../clauses/mixins/WithReturn";
export interface FullTextQueryNodes extends WithReturn {
}
export declare class FullTextQueryNodes extends Clause {
    private targetNode;
    private indexName;
    private phrase;
    private whereClause;
    constructor(targetNode: NodeRef, indexName: string, phrase: Variable, parent?: Clause);
    where(input: Predicate): this;
    getCypher(env: CypherEnvironment): string;
}
//# sourceMappingURL=db.d.ts.map